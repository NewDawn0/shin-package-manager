#!/bin/bash
##### sources #####
source $HOME/.ndos/shin/shin.config
source $HOME/.ndos/shin/shinVersion.config
##### updater #####
update () {
    echo -ne "\033[0;36m=> \033[0mUpadting 0/8\r"
    sudo -u $user brew update > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 1/8\033[0m\r"
    sudo -u $user brew upgrade > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 2/8\033[0m\r"
    sudo -u $user indiepkg update > /dev/null 2>&1 && echo -ne "\033[0;36m=>\033[0m Upadting 3/8\033[0m\r"
    sudo -u $user npm install -g npm > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 4/8\r"
    sudo -u $user npm update -g > /dev/null 2>&1 && echo -ne "\033[0;36m=>\033[0m Upadting 5/8\r"
    sudo port selfupdate > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 6/8\r"
    sudo port upgrade outdated > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 7/8\r"
    sudo -u $user python -m pip install -â€“upgrade pip > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 8/8\r"
    echo -e "\033[0;32m=> \033[0mUpdated all packages\r"
    echo ""
}
shin-update () {
    wget https://raw.githubusercontent.com/NewDawn0/shin/main/shin > /dev/null 2>&1
    wget https://raw.githubusercontent.com/NewDawn0/shin/main/configs/shinVersion.config > /dev/null 2>&1
    mv shin.1 shin && chmod +x shin
    mv shinVersion.config $HOME/.ndos/shin/shinVersion.config
    source $HOME/.ndos/shin/shinVersion.config
    echo ""
    echo -e "\033[0;36mSuccessfully updated to       \033[0m"
    echo -e "\033[0;36m$(figlet "Shin v$version")       \033[0m"
    echo ""
    update
}

##### install #####
install () {
    for pkg in "$@"
    do
        if sudo -u $user indiepkg install -y $pkg > /dev/null 2>&1; then
            echo -e "\033[0;32m=>\033[0m Installed $pkg"
            sudo echo "$pkg|indiepkg" >> $HOME/.ndos/shin/packages.txt
        else
            echo "here :("
            if sudo -u $user brew install "$pkg" > /dev/null 2>&1; then
                echo -e "\033[0;32m=>\033[0m Installed $pkg"
                sudo echo "$pkg|brew" >> $HOME/.ndos/shin/packages.txt
            else
                if sudo port install "$pkg" > /dev/null 2>&1; then
                    echo -e "\033[0;32m=>\033[0m Installed $pkg with port"
                    sudo echo "$pkg|port" >> $HOME/.ndos/shin/packages.txt
                else
                    if sudo -u $user cargo install "$pkg" > /dev/null 2>&1; then
                        echo -e "\033[0;32m=>\033[0m Installed $pkg"
                        sudo echo "$pkg|cargo" >> $HOME/.ndos/shin/packages.txt
                    else
                        if sudo -u $user python -m pip install "$pkg" > /dev/null 2>&1; then
                            echo -e "\033[0;32m=>\033[0m Installed $pkg"
                            sudo echo "$pkg|pip" >> $HOME/.ndos/shin/packages.txt
                        else
                            if sudo -u $user npm install -g "$pkg" > /dev/null 2>&1; then
                                echo -e "\033[0;32m=>\033[0m Installed $pkg"
                                sudo echo "$pkg|npm" >> $HOME/.ndos/shin/packages.txt
                            else
                                echo -e "\033[0;36m=>\033[0m No package was found named $pkg"
                                return 1
                            fi
                        fi
                    fi                    #fi
                fi
            fi
        fi
    done
}
packagemanager-install () {
    manager=$1
    all=${@:2}
    for pkg in $all; do
        case $manager in
            brew)       sudo -u $user brew install $pkg > /dev/null 2>&1 && sudo echo "$pkg|brew" >> $HOME/.ndos/shin/packages.txt && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            indiepkg)   sudo -u $user indiepkg install -y $pkg > /dev/null 2>&1 && sudo echo "$pkg|indiepkg" >> $HOME/.ndos/shin/packages.txt && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            port)       sudo -u $user sudo port install $pkg > /dev/null 2>&1 && sudo echo "$pkg|port" >> $HOME/.ndos/shin/packages.txt && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            cargo)      sudo -u $user cargo install $pkg > /dev/null 2>&1 && sudo echo "$pkg|cargo" >> $HOME/.ndos/shin/packages.txt && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            npm)        sudo -u $user npm install -g $pkg > /dev/null 2>&1 && sudo echo "$pkg|npm" >> $HOME/.ndos/shin/packages.txt && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            pip)        sudo -u $user python -m pip install $pkg > /dev/null 2>&1 && sudo echo "$pkg|pip" >> $HOME/.ndos/shin/packages.txt && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
        esac
    done
}
listInsalled () {
    cat  $HOME/.ndos/shin/packages.txt | awk -F "|" '{print $1}'
}

##### main #####
id=$(id -u)
if [ $id -eq 0 ]; then
    case $1 in
        shin-update)    shin-update ;;
        -us)            shin-update ;;
        -su)            shin-update ;;
        update)         update ;;
        -u)             update ;;
        -l)             listInsalled ;;
        list)           listInsalled ;;
        install)        install "${@:2}" ;;
        -i)             install "${@:2}" ;;
        pkgman-install) packagemanager-install ${@:2} ;;
        -pi)            packagemanager-install ${@:2} ;;
        -ip)            packagemanager-install ${@:2} ;;
        *) echo "Error: Invalid argument" ;;
    esac
else
    echo "Shin must be run as root"
fi