#!/bin/bash
##### sources #####
source $HOME/.ndos/shin/shin.config
source $HOME/.ndos/shin/shinVersion.config

##### updater #####
update () {
    echo -ne "\033[0;36m=> \033[0mUpadting 0/7\r"
    brew update > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 1/8\033[0m\r"
    brew upgrade > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 2/8\033[0m\r"
    indiepkg update > /dev/null 2>&1 && echo -ne "\033[0;36m=>\033[0m Upadting 3/8\033[0m\r"
    npm install -g npm > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 4/8\r"
    npm update -g > /dev/null 2>&1 && echo -ne "\033[0;36m=>\033[0m Upadting 5/8\r"
    sudo port selfupdate > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 6/8\r"
    sudo port upgrade outdated > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 7/8\r"
    python -m pip install -â€“upgrade pip > /dev/null 2>&1 && echo -ne "\033[0;36m=> \033[0mUpadting 8/8\r"
    echo "\033[0;32m=> \033[0mUpdated all packages\r"
    echo ""
}
shin-update () {
    wget https://raw.githubusercontent.com/NewDawn0/shin/main/shin > /dev/null 2>&1
    wget https://raw.githubusercontent.com/NewDawn0/shin/main/configs/shinVersion.config > /dev/null 2>&1
    mv shin.1 shin && chmod +x shin
    mv shinVersion.config $HOME/.ndos/shin/shinVersion.config
    source $HOME/.ndos/shin/shinVersion.config
    echo ""
    echo -e "\033[0;36mSuccessfully updated to       \033[0m"
    echo -e "\033[0;36m$(figlet "Shin v$version")       \033[0m"
    echo ""
    update
}

##### install #####
install () {
    for pkg in "$@"
    do
        if brew install $pkg > /dev/null 2>&1; then
            echo -e "\033[0;32m=>\033[0m Installed $pkg"
            echo $pkg >> $HOME/.ndos/shin/installed.packages
        else
            if indiepkg install -y $pkg > /dev/null 2>&1; then
                echo -e "\033[0;32m=>\033[0m Installed $pkg"
            else
                if sudo port install $pkg > /dev/null 2>&1; then
                    echo -e "\033[0;32m=>\033[0m Installed $pkg"
                else
                    if cargo install $pkg > /dev/null 2>&1; then
                        echo -e "\033[0;32m=>\033[0m Installed $pkg"
                    else
                        echo -e "\033[0;36m=>\033[0m No package was found named $pkg"
                        return 1
                    fi
                fi
            fi
        fi
    done
}
packagemanager-install () {
    manager=$1
    all=${@:2}
    for pkg in $all; do
        case $manager in
            brew)   brew install $pkg > /dev/null 2>&1 && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            indiepkg) indiepkg install -y $pkg > /dev/null 2>&1 && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            port)   sudo port install $pkg > /dev/null 2>&1 && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            cargo)  cargo install $pkg > /dev/null 2>&1 && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            npm)    npm install -g $pkg > /dev/null 2>&1 && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
            pip)    python -m pip install $pkg > /dev/null 2>&1 && echo -e "\033[0;32m=>\033[0m Installed $pkg" ;;
        esac
    done
}

##### main #####
id=$(id -u)
if [ $id -eq 0 ]; then
    if [ "$1" == "shin-update" ] || [ "$1" == "-us" ] || [ "$1" == "-su" ]; then
        shin-update
    elif [ "$1" == "update" ] || [ "$1" == "-u" ] || [ "$1" == "-u" ]; then
        update
    elif [ "$1" == "install" ] || [ "$1" == "-i" ] ; then
        install ${@:2}
    elif [ "$1" == "pkgman-install" ] || [ "$1" == "-pi" ] || [ "$1" == "-ip" ]; then
        packagemanager-install ${@:2}
    else
        echo "Error: Invalid argument"
    fi
else
    echo "Shin must be run as root"
fi